/**
 * Question description: Given two strings s and t which consist of only lowercase letters.
 * 		String t is generated by random shuffling string s and then add one more letter at a random position.
 * 		Find the letter that was added in t. 
 */

// Example: 
// Input: s = "abcd"; t = "abcde"
// Output: e
// Explanation: 'e' is the letter that was added.

/**
 * Author: Jinglong Guo
 * Difficulty: Easy; Company: .
 * Date: 03/02/2017
 */

// First version.
// USE hashmap to store the characters in original string.
public class Solution {
    public char findTheDifference(String s, String t) {
        Map<Character, Integer> map = new HashMap<Character, Integer>();
        for (int i = 0; i < s.length(); i++) {
            Character c = s.charAt(i);
            if (map.get(c) == null) {
                map.put(c, 1);
            } else {
                map.put(c, map.get(c) + 1);
            }
        }
        for (int i = 0; i < t.length(); i++) {
            Character c = t.charAt(i);
            if (!map.containsKey(c)) {
                return c;
            }
            if (map.get(c) == 1) {
                map.remove(c);
            } else {
                map.put(c, map.get(c) - 1);
            }
        }
        return '\0';
    }
}

// Second version.
// Use for loop to sum the ascii of characters in original string.
public class Solution {
    public char findTheDifference(String s, String t) {
        int sum = 0;
        for (int i = 0; i < s.length(); i++) {
            char c = s.charAt(i); 
            sum += (int) c;
        }
        for (int i = 0; i < t.length(); i++) {
            char c = t.charAt(i); 
            sum -= (int) c;
        }
        return (char) -sum;
    }
}

// Third version.
// similar to the second version, but combine two for loops together 
// and move the defination of the local variables outside the loop.
public class Solution {
    public char findTheDifference(String s, String t) {
        int sum = 0, j = 0, i = 0;
        char c_t = '\0';
        char c_s = '\0';
        for (; i < s.length();i++, j++) {
            c_s = s.charAt(i);
            c_t = t.charAt(j);
            sum += (int) c_s;
            sum -= (int) c_t;
        }
        for (; j < t.length(); j++) {
            sum -= t.charAt(j);
        }
        return (char) -sum;
    }
}




